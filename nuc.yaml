ssh_authorized_keys:
  - github:ph1ll
write_files:
- content: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: ingress-nginx
    ---
    apiVersion: helm.cattle.io/v1
    kind: HelmChart
    metadata:
      name: ingress-nginx
      namespace: kube-system
    spec:
      chart: ingress-nginx
      targetNamespace: ingress-nginx
      repo: https://kubernetes.github.io/ingress-nginx/
  owner: root:root
  path: /var/lib/rancher/k3s/server/manifests/ingress-nginx.yaml
  permissions: '0600'
- content: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: cert-manager
    ---
    apiVersion: helm.cattle.io/v1
    kind: HelmChart
    metadata:
      name: cert-manager
      namespace: kube-system
    spec:
      chart: cert-manager
      targetNamespace: cert-manager
      repo: https://charts.jetstack.io
      set:
        installCRDs: "true"
    ---
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-staging
      namespace: cert-manager
    spec:
      acme:
        email: admin@1ll.uk
        server: https://acme-staging-v02.api.letsencrypt.org/directory
        privateKeySecretRef:
          name: letsencrypt-staging-account-key
        solvers:
        - selector: {}
          http01:
            ingress:
              class: nginx
    ---
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: letsencrypt
      namespace: cert-manager
    spec:
      acme:
        email: admin@1ll.uk
        server: https://acme-v02.api.letsencrypt.org/directory
        privateKeySecretRef:
          name: letsencrypt-account-key
        solvers:
        - selector: {}
          http01:
            ingress:
              class: nginx
  owner: root:root
  path: /var/lib/rancher/k3s/server/manifests/cert-manager.yaml
  permissions: '0600'
- content: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: media
    ---

    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: radarr
      namespace: media
    spec:
      selector:
        matchLabels:
          app: radarr
      replicas: 1
      template:
        metadata:
          labels:
            app: radarr
        spec:
          containers:
          - name: radarr
            image: linuxserver/radarr:latest
            ports:
            - containerPort: 7878
            volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
          volumes:
          - name: config
            hostPath:
              path: /mnt/data/config/radarr
          - name: downloads
            hostPath:
              path: /mnt/data/downloads
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: radarr
      namespace: media
    spec:
      ports:
      - port: 7878
        targetPort: 7878
        protocol: TCP
      selector:
        app: radarr
    ---
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: radarr
      namespace: media
      annotations:
        kubernetes.io/ingress.class: "nginx"    
        cert-manager.io/cluster-issuer: "letsencrypt"
    spec:
      tls:
      - hosts:
        - radarr.1ll.uk
        secretName: radarr-1ll-uk-tls
      rules:
      - host: radarr.1ll.uk
        http:
          paths:
          - path: /
            backend:
              serviceName: radarr
              servicePort: 7878
    ---

    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: sonarr
      namespace: media
    spec:
      selector:
        matchLabels:
          app: sonarr
      replicas: 1
      template:
        metadata:
          labels:
            app: sonarr
        spec:
          containers:
          - name: sonarr
            image: linuxserver/sonarr:latest
            ports:
            - containerPort: 8989
            volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
          volumes:
          - name: config
            hostPath:
              path: /mnt/data/config/sonarr
          - name: downloads
            hostPath:
              path: /mnt/data/downloads
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: sonarr
      namespace: media
    spec:
      ports:
      - port: 8989
        targetPort: 8989
        protocol: TCP
      selector:
        app: sonarr
    ---
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: sonarr
      namespace: media
      annotations:
        kubernetes.io/ingress.class: "nginx"    
        cert-manager.io/cluster-issuer: "letsencrypt"
    spec:
      tls:
      - hosts:
        - sonarr.1ll.uk
        secretName: sonarr-1ll-uk-tls
      rules:
      - host: sonarr.1ll.uk
        http:
          paths:
          - path: /
            backend:
              serviceName: sonarr
              servicePort: 8989
    ---

    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nzbget
      namespace: media
    spec:
      selector:
        matchLabels:
          app: nzbget
      replicas: 1
      template:
        metadata:
          labels:
            app: nzbget
        spec:
          containers:
          - name: nzbget
            image: linuxserver/nzbget:latest
            ports:
            - containerPort: 6789
            volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
          volumes:
          - name: config
            hostPath:
              path: /mnt/data/config/nzbget
          - name: downloads
            hostPath:
              path: /mnt/data/downloads
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: nzbget
      namespace: media
    spec:
      ports:
      - port: 6789
        targetPort: 6789
        protocol: TCP
      selector:
        app: nzbget
    ---
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: nzbget
      namespace: media
      annotations:
        kubernetes.io/ingress.class: "nginx"    
        cert-manager.io/cluster-issuer: "letsencrypt"
    spec:
      tls:
      - hosts:
        - nzbget.1ll.uk
        secretName: nzbget-1ll-uk-tls
      rules:
      - host: nzbget.1ll.uk
        http:
          paths:
          - path: /
            backend:
              serviceName: nzbget
              servicePort: 6789
    ---


    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: plex
      namespace: media
    spec:
      selector:
        matchLabels:
          app: plex
      replicas: 1
      template:
        metadata:
          labels:
            app: plex
        spec:
          containers:
          - name: plex
            image: linuxserver/plex:latest
            ports:
            - containerPort: 32400
            volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
          volumes:
          - name: config
            hostPath:
              path: /mnt/data/config/plex
          - name: downloads
            hostPath:
              path: /mnt/data/downloads
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: plex
      namespace: media
    spec:
      ports:
      - port: 32400
        targetPort: 32400
        protocol: TCP
      selector:
        app: plex
    ---
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: plex
      namespace: media
      annotations:
        kubernetes.io/ingress.class: "nginx"    
        cert-manager.io/cluster-issuer: "letsencrypt"
    spec:
      tls:
      - hosts:
        - plex.1ll.uk
        secretName: plex-1ll-uk-tls
      rules:
      - host: plex.1ll.uk
        http:
          paths:
          - path: /
            backend:
              serviceName: plex
              servicePort: 32400
    ---

  owner: root:root
  path: /var/lib/rancher/k3s/server/manifests/media.yaml
  permissions: '0600'
hostname: nuc
run_cmd:
- # Connect iSCSI
- iscsiadm --mode discovery -t sendtargets --portal 192.168.1.3
- iscsiadm --mode node --targetname iqn.2013-03.com.wdc:nas:data --portal 192.168.1.3 --login
- # Create mount point
- mkdir -p /mnt/data
- # Make mount point immutable
- chattr +i /mnt/data
- # Wait for iSCSI volume
- echo "Waiting for iSCSI volume..."
- while ! blkid | grep 2b22b5f1-152b-436d-8fe5-ddce59f5fd23; do sleep 1; done
- # Mount iSCSI volume
- mount UUID="2b22b5f1-152b-436d-8fe5-ddce59f5fd23" /mnt/data
k3os:
  k3s_args:
  - "server"
  - "--disable=traefik"